package mydbproject24;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

public class AboutFrame extends javax.swing.JFrame {
    Connection con = MyConnection.con;
    
    public AboutFrame() {
        initComponents();
        getInfo();
        section1TextField1.setText("GYM_DB");
        section1TextField2.setText("Microsoft JDBC Driver");
        section1TextField3.setText("4.0 for SQL Server");
    }
    
    private void getInfo(){
        ArrayList<String> table = getTable();
        fillTableList(table);
        
        ArrayList<String> procedures = getProcedures();
        fillProceduresList(procedures);
        
        ArrayList<String> triggers = getTriggers();
        fillTriggersList(triggers);
    }
    
    private void fillTableList(ArrayList<String> al){
        DefaultListModel listModel = new DefaultListModel();
        
        for(int i = 0; i < al.size(); i++){
            listModel.addElement(al.get(i));
        }
        
        tableList.setModel(listModel);
    }
    
    private void fillProceduresList(ArrayList<String> al){
        DefaultListModel listModel = new DefaultListModel();
        
        for(int i = 0; i < al.size(); i++){
            listModel.addElement(al.get(i));
        }
        
        proceduresList.setModel(listModel);
    }
    
    private void fillTriggersList(ArrayList<String> al){
        DefaultListModel listModel = new DefaultListModel();
        
        for(int i = 0; i < al.size(); i++){
            listModel.addElement(al.get(i));
        }
        
        triggersList.setModel(listModel);
    }
    
    private ArrayList getTable(){
        ArrayList<String> tableList = new ArrayList<String>();
        String query = "select name, type, type_desc from sys.objects where type='U' order by name";
        
        try{      
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
                tableList.add(rs.getString("name"));
            }
            
            rs.close();
        }
        catch(Exception e){}
        
        return tableList;
    }
    
    private ArrayList getProcedures(){
        ArrayList<String> proceduresList = new ArrayList<String>();
        String query = "select name from sys.objects where type='P' or type='FN' or type='TF' order by name";
        
        try{
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
                proceduresList.add(rs.getString("name"));
            }
            
            rs.close();
        }
        catch(Exception e){}
        
        return proceduresList;
    }
    
    private ArrayList getTriggers(){
        ArrayList<String> proceduresList = new ArrayList<String>();
        String query = "select name from sys.objects where type='TR' order by name";
        
        try{
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
                proceduresList.add(rs.getString("name"));
            }
            
            rs.close();
        }
        catch(Exception e){}
        
        return proceduresList;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wrap = new javax.swing.JPanel();
        section1 = new javax.swing.JPanel();
        section1Label1 = new javax.swing.JLabel();
        section1Label2 = new javax.swing.JLabel();
        section1Label3 = new javax.swing.JLabel();
        section1TextField1 = new javax.swing.JTextField();
        section1TextField2 = new javax.swing.JTextField();
        section1TextField3 = new javax.swing.JTextField();
        section2 = new javax.swing.JPanel();
        section2Label1 = new javax.swing.JLabel();
        section2Label2 = new javax.swing.JLabel();
        section2Label3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        proceduresList = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        triggersList = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        section2TextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        wrap.setBackground(new java.awt.Color(255, 255, 255));

        section1.setBackground(new java.awt.Color(255, 255, 255));

        section1Label1.setText("Database Name");

        section1Label2.setText("JDBC Driver");

        section1Label3.setText("Driver Version");

        section1TextField1.setText("jTextField1");
        section1TextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                section1TextField1ActionPerformed(evt);
            }
        });

        section1TextField2.setText("jTextField2");

        section1TextField3.setText("jTextField3");

        javax.swing.GroupLayout section1Layout = new javax.swing.GroupLayout(section1);
        section1.setLayout(section1Layout);
        section1Layout.setHorizontalGroup(
            section1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(section1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(section1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(section1TextField1)
                    .addGroup(section1Layout.createSequentialGroup()
                        .addGroup(section1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(section1Label1)
                            .addComponent(section1Label2)
                            .addComponent(section1Label3))
                        .addGap(0, 25, Short.MAX_VALUE))
                    .addComponent(section1TextField2)
                    .addComponent(section1TextField3))
                .addContainerGap())
        );
        section1Layout.setVerticalGroup(
            section1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(section1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(section1Label1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(section1TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(section1Label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(section1TextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(section1Label3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(section1TextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        section2.setBackground(new java.awt.Color(255, 255, 255));

        section2Label1.setText("Table");

        section2Label2.setText("Procedures");

        section2Label3.setText("Triggers");

        tableList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        tableList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                tableListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(tableList);

        proceduresList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        proceduresList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                proceduresListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(proceduresList);

        triggersList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        triggersList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                triggersListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(triggersList);

        section2TextArea.setColumns(20);
        section2TextArea.setRows(5);
        jScrollPane4.setViewportView(section2TextArea);

        javax.swing.GroupLayout section2Layout = new javax.swing.GroupLayout(section2);
        section2.setLayout(section2Layout);
        section2Layout.setHorizontalGroup(
            section2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(section2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(section2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(section2Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(section2Layout.createSequentialGroup()
                        .addGroup(section2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(section2Layout.createSequentialGroup()
                                .addComponent(section2Label1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                .addGap(141, 141, 141))
                            .addGroup(section2Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(section2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(section2Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46))
                            .addGroup(section2Layout.createSequentialGroup()
                                .addComponent(section2Label2, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                .addGap(96, 96, 96)))
                        .addGroup(section2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(section2Layout.createSequentialGroup()
                                .addComponent(section2Label3, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                .addGap(112, 112, 112))
                            .addGroup(section2Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        section2Layout.setVerticalGroup(
            section2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(section2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(section2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(section2Label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(section2Label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(section2Label3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(section2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout wrapLayout = new javax.swing.GroupLayout(wrap);
        wrap.setLayout(wrapLayout);
        wrapLayout.setHorizontalGroup(
            wrapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wrapLayout.createSequentialGroup()
                .addComponent(section1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(section2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        wrapLayout.setVerticalGroup(
            wrapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(section1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(section2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wrap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wrap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_tableListValueChanged
        section2TextArea.setText("");
        String tname = tableList.getSelectedValue().toString();
        
        ArrayList<String> conList = new ArrayList<String>();
        conList = getColNames(tname);
        
        for(int i = 0; i < conList.size(); i++) {
            section2TextArea.append(conList.get(i) + "\n");
        }
    }//GEN-LAST:event_tableListValueChanged

    private void proceduresListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_proceduresListValueChanged
        section2TextArea.setText("");
        String proname = proceduresList.getSelectedValue().toString();
        String proid = null;
        int idx = 0;
              
        String query = "select * from sys.objects where name='"+proname+"'";
        
        section2TextArea.append("Procedure name : " + proname + "\n");
        try{      
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
                proid = rs.getString(2);
                section2TextArea.append("Object id : " + rs.getString(2) + "\n");
                section2TextArea.append("Type desc : " + rs.getString(7) + "\n");
                section2TextArea.append("Create date : " + rs.getString(8) + "\n");
                section2TextArea.append("Modify date : " + rs.getString(9) + "\n");
                section2TextArea.append("Is ms shipped : " + rs.getString(10) + "\n");
                section2TextArea.append("Is published : " + rs.getString(11) + "\n");
                section2TextArea.append("Is schema published : " + rs.getString(12) + "\n");
            }
            
            rs.close();
            st.close();
        }
        catch(Exception e) {}
         
        String query2 = "select name from sys.parameters where object_id ="+proid;
        
        try{      
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query2);
            int i = 1;
            
            while(rs.next()){
                section2TextArea.append("Input Parameter" + i + " : " + rs.getString(1) + "\n");
                i++;
            }
            
            rs.close();
            st.close();
        }
        catch(Exception e) {}
    }//GEN-LAST:event_proceduresListValueChanged

    private void triggersListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_triggersListValueChanged
        section2TextArea.setText("");
        String trname = triggersList.getSelectedValue().toString();
        int idx = 0;
        String trType;
        
        if(trname.indexOf("delete") > 0) {
            trType = "delete";
            idx = trname.indexOf("delete");
        }
        else {
            trType = "update";
            idx = trname.indexOf("update");
        }
       
        section2TextArea.append("Trigger name : " + trname + "\n");
        section2TextArea.append("Trigger Type : " + trType + "\n");
        
        String query = "select * from sys.objects where name='"+trname+"'";
        
        try{      
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
                section2TextArea.append("Object id : " + rs.getString(2) + "\n");
                section2TextArea.append("Parent id : " + rs.getString(5) + "\n");
                section2TextArea.append("Type desc : " + rs.getString(7) + "\n");
                section2TextArea.append("Create date : " + rs.getString(8) + "\n");
                section2TextArea.append("Modify date : " + rs.getString(9) + "\n");
                section2TextArea.append("Is ms shipped : " + rs.getString(10) + "\n");
                section2TextArea.append("Is published : " + rs.getString(11) + "\n");
                section2TextArea.append("Is schema published : " + rs.getString(12) + "\n");
            }
            
            rs.close();
        }
        catch(Exception e) {}
    }//GEN-LAST:event_triggersListValueChanged

    private void section1TextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_section1TextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_section1TextField1ActionPerformed
    
    private ArrayList<String> getColNames(String tname) {
        ArrayList<String> cnames = new ArrayList<String>();
        
        try{
            DatabaseMetaData dbmd = con.getMetaData();
            ResultSet rs = dbmd.getColumns(null, null, tname, null);
            
            while(rs.next()){
                cnames.add(rs.getString(4));
            }
            
            rs.close();
        }
        catch(Exception e){}
        
        return cnames;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AboutFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AboutFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AboutFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AboutFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AboutFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> proceduresList;
    private javax.swing.JPanel section1;
    private javax.swing.JLabel section1Label1;
    private javax.swing.JLabel section1Label2;
    private javax.swing.JLabel section1Label3;
    private javax.swing.JTextField section1TextField1;
    private javax.swing.JTextField section1TextField2;
    private javax.swing.JTextField section1TextField3;
    private javax.swing.JPanel section2;
    private javax.swing.JLabel section2Label1;
    private javax.swing.JLabel section2Label2;
    private javax.swing.JLabel section2Label3;
    private javax.swing.JTextArea section2TextArea;
    private javax.swing.JList<String> tableList;
    private javax.swing.JList<String> triggersList;
    private javax.swing.JPanel wrap;
    // End of variables declaration//GEN-END:variables

}
